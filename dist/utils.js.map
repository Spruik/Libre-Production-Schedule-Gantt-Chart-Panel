{"version":3,"sources":["../src/utils.js"],"names":["sortMax","data","sort","a","b","order_id","mergeKeyVal","arr","dimension","i","length","elem","mergeKeyArrayVal","order","o","subElem","push","findDistinct","Array","from","Set","getLineStartTime","line","l","split","target","_prodLineDetails","filter","site","area","production_line","start_time","queryProductionLineDetails","callback","url","postgRestHost","get","then","res","catch","e","alert","highlightColor","hexColor","rgb","hexToRgb","r","g","rgbToHex","componentToHex","hex","shorthandRegex","replace","m","result","exec","parseInt","c","toString","appEvents","hostname","window","location","influxHost","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","handleResponse","onerror","send","readyState","status","JSON","parse","responseText","statusText","post","type","title","msg","emit","showModal","html","src","modalClass","model","copyObject","obj","json","stringify","sure","promise","ok","error"],"mappings":"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","file":"utils.js","sourcesContent":["import { appEvents } from 'app/core/core';\r\n\r\nconst hostname = window.location.hostname;\r\nexport const influxHost = 'http://' + hostname + ':8086/';\r\nexport const postgRestHost = 'http://' + hostname + ':5436/';\r\n\r\nlet _prodLineDetails;\r\n\r\nexport const get = (url) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', url);\r\n\t\txhr.onreadystatechange = handleResponse;\r\n\t\txhr.onerror = (e) => reject(e);\r\n\t\txhr.send();\r\n\r\n\t\tfunction handleResponse() {\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t\tvar res = JSON.parse(xhr.responseText);\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(this.statusText);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport const post = (url, line) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('POST', url);\r\n\t\txhr.onreadystatechange = handleResponse;\r\n\t\txhr.onerror = (e) => reject(e);\r\n\t\txhr.send(line);\r\n\r\n\t\tfunction handleResponse() {\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\tif (xhr.status === 200) {\r\n\t\t\t\t\t// console.log('200');\r\n\t\t\t\t\tvar res = JSON.parse(xhr.responseText);\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t} else if (xhr.status === 204) {\r\n\t\t\t\t\t// console.log('204');\r\n\t\t\t\t\tres = xhr.responseText;\r\n\t\t\t\t\tresolve(res);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(this.statusText);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport const alert = (type, title, msg) => {\r\n\tappEvents.emit('alert-' + type, [ title, msg ]);\r\n};\r\n\r\nexport const showModal = (html, data) => {\r\n\tappEvents.emit('show-modal', {\r\n\t\tsrc: 'public/plugins/smart-factory-production-schedule-gantt-chart-panel/partials/' + html,\r\n\t\tmodalClass: 'confirm-modal',\r\n\t\tmodel: data\r\n\t});\r\n};\r\n\r\nexport function sortMax(data) {\r\n\treturn data.sort((a, b) => b.order_id - a.order_id);\r\n}\r\n\r\nexport const copyObject = (obj) => {\r\n\tconst json = JSON.stringify(obj);\r\n\treturn JSON.parse(json);\r\n};\r\n\r\nexport function mergeKeyVal(arr, dimension) {\r\n\tlet data = {};\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\tconst elem = arr[i];\r\n\t\tdata[dimension[i]] = elem;\r\n\t}\r\n\treturn data;\r\n}\r\n\r\nexport function mergeKeyArrayVal(arr, dimension) {\r\n\tlet data = [];\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\tconst elem = arr[i];\r\n\t\tlet order = {};\r\n\t\tfor (let o = 0; o < elem.length; o++) {\r\n\t\t\tconst subElem = elem[o];\r\n\t\t\torder[dimension[o]] = subElem;\r\n\t\t}\r\n\t\tdata.push(order);\r\n\t}\r\n\treturn data;\r\n}\r\n\r\nexport function findDistinct(arr) {\r\n\treturn Array.from(new Set(arr));\r\n}\r\n\r\n/**\r\n * pass in the line, return the line's default start time\r\n * @param {*} line \r\n */\r\nexport function getLineStartTime(line) {\r\n\tconst l = line.split(' | ');\r\n\tconst target = _prodLineDetails.filter(\r\n\t\t(line) => line.site === l[0] && line.area === l[1] && line.production_line === l[2]\r\n\t);\r\n\tif (target.length === 0) {\r\n\t\treturn '6:00:00';\r\n\t} else {\r\n\t\tif (target[0].start_time) {\r\n\t\t\treturn target[0].start_time;\r\n\t\t} else {\r\n\t\t\treturn '6:00:00';\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * It sends query to postgres db to get production line details and then\r\n * set the results global in this utils file for further uses.\r\n * Then execute the callback funtion when finished.\r\n */\r\nexport function queryProductionLineDetails(callback) {\r\n\tconst url =\r\n\t\tpostgRestHost + 'equipment?site=not.is.null&area=not.is.null&production_line=not.is.null&equipment=is.null';\r\n\tget(url)\r\n\t\t.then((res) => {\r\n\t\t\t_prodLineDetails = res;\r\n\t\t\tcallback();\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\talert('error', 'Error', 'An error has occurred due to ' + e + ', please refresh the page and try again');\r\n\t\t});\r\n}\r\n\r\nexport function highlightColor(hexColor) {\r\n\tconst rgb = hexToRgb(hexColor);\r\n\trgb.r >= 235 ? (rgb.r = 255) : (rgb.r += 20);\r\n\trgb.g >= 235 ? (rgb.g = 255) : (rgb.g += 20);\r\n\trgb.b >= 235 ? (rgb.b = 255) : (rgb.b += 20);\r\n\treturn rgbToHex(rgb.r, rgb.g, rgb.b);\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n\tlet shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n\t\treturn r + r + g + g + b + b;\r\n\t});\r\n\r\n\tlet result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\treturn result\r\n\t\t? {\r\n\t\t\t\tr: parseInt(result[1], 16),\r\n\t\t\t\tg: parseInt(result[2], 16),\r\n\t\t\t\tb: parseInt(result[3], 16)\r\n\t\t\t}\r\n\t\t: null;\r\n}\r\n\r\nfunction componentToHex(c) {\r\n\tlet hex = c.toString(16);\r\n\treturn hex.length === 1 ? '0' + hex : hex;\r\n}\r\n\r\nexport const sure = (promise) =>\r\n\tpromise.then((data) => ({ ok: true, data })).catch((error) => Promise.resolve({ ok: false, error }));\r\n"]}
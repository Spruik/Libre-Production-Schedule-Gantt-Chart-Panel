{"version":3,"sources":["../src/instant_search_ctrl.js"],"names":["enableInstantSearch","products","productionLines","console","log","filter","data","production_line","equipment","productionLineData","reduce","arr","line","obj","value","text","site","area","push","productionLineDataList","DataList","create","removeListeners","addListeners","productsData","p","product_id","product_desc","productsDataList"],"mappings":";;;;;;;AACA;;;;;;;AAOO,WAASA,mBAAT,CAA8BC,QAA9B,EAAwCC,eAAxC,EAAyD;;AAE9DC,YAAQC,GAAR,CAAYH,QAAZ;;AAEA,QAAIC,eAAJ,EAAqB;AACnBC,cAAQC,GAAR,CAAYF,eAAZ;;AAEAA,wBAAkBA,gBAAgBG,MAAhB,CAAuB;AAAA,eAAQC,KAAKC,eAAL,KAAyB,IAAzB,IAAiCD,KAAKE,SAAL,KAAmB,IAA5D;AAAA,OAAvB,CAAlB;;AAEA,UAAMC,qBAAqBP,gBAAgBQ,MAAhB,CAAuB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC/D,YAAMC,MAAM,EAACC,OAAOF,IAAR,EAAcG,MAAMH,KAAKI,IAAL,GAAY,KAAZ,GAAoBJ,KAAKK,IAAzB,GAAgC,KAAhC,GAAwCL,KAAKL,eAAjE,EAAZ;AACAI,YAAIO,IAAJ,CAASL,GAAT;AACA,eAAOF,GAAP;AACD,OAJ0B,EAIxB,EAJwB,CAA3B;;AAMA,UAAMQ,yBAAyB,IAAIC,QAAJ,CAC7B,0BAD6B,EAE7B,gCAF6B,EAG7B,6BAH6B,EAI7BX,kBAJ6B,CAA/B;;AAOAU,6BAAuBE,MAAvB;AACAF,6BAAuBG,eAAvB;AACAH,6BAAuBI,YAAvB,CAAoCJ,sBAApC;AACD;;AAED,QAAMK,eAAevB,SAASS,MAAT,CAAgB,UAACC,GAAD,EAAMc,CAAN,EAAY;AAC/C,UAAMZ,MAAM,EAACC,OAAOW,CAAR,EAAWV,MAAMU,EAAEC,UAAF,GAAe,KAAf,GAAuBD,EAAEE,YAA1C,EAAZ;AACAhB,UAAIO,IAAJ,CAASL,GAAT;AACA,aAAOF,GAAP;AACD,KAJoB,EAIlB,EAJkB,CAArB;;AAMA,QAAMiB,mBAAmB,IAAIR,QAAJ,CACvB,mBADuB,EAEvB,yBAFuB,EAGvB,sBAHuB,EAIvBI,YAJuB,CAAzB;;AAOAI,qBAAiBP,MAAjB;AACAO,qBAAiBN,eAAjB;AACAM,qBAAiBL,YAAjB,CAA8BK,gBAA9B;AACD;;iCA3Ce5B,mB;;;;AARRoB,c,aAAAA,Q","file":"instant_search_ctrl.js","sourcesContent":["import {DataList} from './datalist'\n/**\n * Expect the product list and production line list data\n * Passed these two data passed in to form the datalist\n * Create datalist object to control the instant search input\n * @param {*} products \n * @param {*} productionLines \n */\nexport function enableInstantSearch (products, productionLines) {\n  \n  console.log(products);\n  \n  if (productionLines) {\n    console.log(productionLines);\n\n    productionLines = productionLines.filter(data => data.production_line !== null && data.equipment === null)\n\n    const productionLineData = productionLines.reduce((arr, line) => {\n      const obj = {value: line, text: line.site + ' | ' + line.area + ' | ' + line.production_line}\n      arr.push(obj)\n      return arr\n    }, [])\n\n    const productionLineDataList = new DataList(\n      \"datalist-production-line\",\n      \"datalist-input-production-line\",\n      \"datalist-ul-production-line\",\n      productionLineData\n    );\n\n    productionLineDataList.create();\n    productionLineDataList.removeListeners()\n    productionLineDataList.addListeners(productionLineDataList);\n  }\n  \n  const productsData = products.reduce((arr, p) => {\n    const obj = {value: p, text: p.product_id + ' | ' + p.product_desc}\n    arr.push(obj)\n    return arr\n  }, [])\n\n  const productsDataList = new DataList(\n    \"datalist-products\",\n    \"datalist-input-products\",\n    \"datalist-ul-products\",\n    productsData\n  );\n\n  productsDataList.create();\n  productsDataList.removeListeners()\n  productsDataList.addListeners(productsDataList);\n}"]}
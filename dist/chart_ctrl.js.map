{"version":3,"sources":["../src/chart_ctrl.js"],"names":["refreshDashb","_ctrl","timeSrv","refreshDashboard","angular","moment","_","$","dp","chart","utils","cons","echarts","MetricsPanelCtrl","panelDefaults","targets","pageSize","showHeader","styles","columns","fontSize","ChartCtrl","$scope","$injector","templateSrv","annotationsSrv","$sanitize","variableSrv","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","hasData","datasource","transform","setTimeQueryStart","getAnnotations","dashboard","range","then","annotations","data","err","dataRaw","render","dataList","length","undefined","from","timeRange","to","filter","rows","type","console","log","queryProductionLineDetails","callback","self","restructuredData","row","lowerCaseRow","map","elem","toLowerCase","indexOf","STATE_REPLACED","STATE_DELETED","scheduledStartTimeTimeStamp","scheduledStartTime","changeover","duration","subtract","isSameOrAfter","isSameOrBefore","globe_data","scope","attrs","ctrl","$panelContainer","find","myChart","init","renderPanel","option","getOption","setOption","setTimeout","height","resize","window","onresize","interationSetup","renderingCompleted","templateUrl"],"mappings":"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","file":"chart_ctrl.js","sourcesContent":["import angular from 'angular';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport * as dp from './data_processor';\nimport * as chart from './chart_option';\nimport * as utils from './utils';\nimport * as cons from './constans';\nimport echarts from './libs/echarts.min';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\n\nimport './css/style.css!';\nimport './css/bootstrap-slider.css!';\nimport './css/instant-search.css!';\nimport './css/timepicker.css!';\nimport './css/datepicker.css!';\n\nlet _ctrl;\n\nconst panelDefaults = {\n\ttargets: [ {} ],\n\tpageSize: null,\n\tshowHeader: true,\n\tstyles: [],\n\tcolumns: [],\n\tfontSize: '100%'\n};\n\nexport class ChartCtrl extends MetricsPanelCtrl {\n\tconstructor($scope, $injector, templateSrv, annotationsSrv, $sanitize, variableSrv) {\n\t\tsuper($scope, $injector);\n\n\t\tthis.pageIndex = 0;\n\n\t\tif (this.panel.styles === void 0) {\n\t\t\tthis.panel.styles = this.panel.columns;\n\t\t\tthis.panel.columns = this.panel.fields;\n\t\t\tdelete this.panel.columns;\n\t\t\tdelete this.panel.fields;\n\t\t}\n\n\t\t_.defaults(this.panel, panelDefaults);\n\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\n\t\tthis.events.on('data-error', this.onDataError.bind(this));\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n\t\tthis.hasData = false;\n\t}\n\n\tissueQueries(datasource) {\n\t\tthis.pageIndex = 0;\n\n\t\tif (this.panel.transform === 'annotations') {\n\t\t\tthis.setTimeQueryStart();\n\t\t\treturn this.annotationsSrv\n\t\t\t\t.getAnnotations({\n\t\t\t\t\tdashboard: this.dashboard,\n\t\t\t\t\tpanel: this.panel,\n\t\t\t\t\trange: this.range\n\t\t\t\t})\n\t\t\t\t.then((annotations) => {\n\t\t\t\t\treturn { data: annotations };\n\t\t\t\t});\n\t\t}\n\n\t\treturn super.issueQueries(datasource);\n\t}\n\n\tonDataError(err) {\n\t\tthis.dataRaw = [];\n\t\tthis.render();\n\t}\n\n\tonDataReceived(dataList) {\n\t\t// console.log('o', utils.copyObject(dataList))\n\t\tif (dataList.length === 0 || dataList === null || dataList === undefined) {\n\t\t\t// console.log('No data reveived')\n\t\t\tthis.hasData = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// time range\n\t\tconst from = this.templateSrv.timeRange.from;\n\t\tconst to = this.templateSrv.timeRange.to;\n\n\t\tdataList = this.filter(dataList, from, to); // filter out those with status of 'replaced' or 'deleted' and those that are not in the time range\n\t\tif (dataList[0].rows.length === 0) {\n\t\t\tthis.hasData = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.hasData = true;\n\t\t}\n\n\t\tif (dataList[0].type !== 'table') {\n\t\t\tconsole.log('To show the pie chart, please format data as a TABLE in the Metrics Setting');\n\t\t\treturn;\n\t\t}\n\n\t\t//if everything is all good, start getting production line details (start time) from postgresdb\n\t\tutils.queryProductionLineDetails(callback);\n\n\t\tlet self = this;\n\t\tfunction callback() {\n\t\t\t//dataList data is messy and with lots of unwanted data, so we need to filter out data that we want -\n\t\t\tlet data = dp.restructuredData(dataList[0].columns, dataList[0].rows);\n\t\t\tif (data.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.render(data);\n\t\t}\n\t}\n\n\t// 1. filter out records that are not of status of 'Replaced'\n\t// 2. filter out records that are not in the time range\n\tfilter(dataList, from, to) {\n\t\tif (dataList.length === 0) {\n\t\t\treturn dataList;\n\t\t}\n\n\t\tlet rows = dataList[0].rows;\n\t\trows = rows.filter((row) => {\n\t\t\tconst lowerCaseRow = row.map((elem) => (typeof elem === 'string' ? elem.toLowerCase() : elem));\n\t\t\tif (lowerCaseRow.indexOf(cons.STATE_REPLACED) === -1 && lowerCaseRow.indexOf(cons.STATE_DELETED) === -1) {\n\t\t\t\tif (!row[8]) {\n\t\t\t\t\treturn row;\n\t\t\t\t} // at the first time the start time will be null, let it in for now, and the time will be assigned, which will be examined later\n\t\t\t\tconst scheduledStartTimeTimeStamp = row[8]; // the scheduled start time is the 10th elem\n\t\t\t\tconst scheduledStartTime = moment(scheduledStartTimeTimeStamp); // moment shcedule start time\n\t\t\t\tconst changeover = moment.duration(row[10], 'H:mm:ss'); // moment changeover\n\t\t\t\tscheduledStartTime.subtract(changeover); // start time - changeover to have the initial time\n\t\t\t\tif (scheduledStartTime.isSameOrAfter(from) && scheduledStartTime.isSameOrBefore(to)) {\n\t\t\t\t\t// if scheduled start time >= $from && <= $to\n\t\t\t\t\treturn row;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdataList[0].rows = rows;\n\t\t//console.log('d', dataList)\n\t\treturn dataList;\n\t}\n\n\trendering() {\n\t\tthis.render(this.globe_data);\n\t}\n\n\tlink(scope, elem, attrs, ctrl) {\n\t\tconst $panelContainer = elem.find('#production-schedule-gantt-chart')[0];\n\t\tconst myChart = echarts.init($panelContainer);\n\t\t_ctrl = ctrl;\n\n\t\tfunction renderPanel(data) {\n\t\t\tif (!myChart || !data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst option = chart.getOption(data);\n\t\t\t// myChart.clear();\n\t\t\tmyChart.setOption(option);\n\t\t\tsetTimeout(() => {\n\t\t\t\t$('#production-schedule-gantt-chart').height(ctrl.height - 51);\n\t\t\t\tmyChart.resize();\n\t\t\t\twindow.onresize = () => {\n\t\t\t\t\tmyChart.resize();\n\t\t\t\t};\n\t\t\t}, 500);\n\n\t\t\tchart.interationSetup(myChart, ctrl);\n\t\t}\n\n\t\tctrl.events.on('panel-size-changed', () => {\n\t\t\tif (myChart) {\n\t\t\t\tconst height = ctrl.height - 51;\n\t\t\t\tif (height >= 280) {\n\t\t\t\t\t$('#production-schedule-gantt-chart').height(height);\n\t\t\t\t}\n\t\t\t\tmyChart.resize();\n\t\t\t}\n\t\t});\n\n\t\tctrl.events.on('render', (data) => {\n\t\t\trenderPanel(data);\n\t\t\tctrl.renderingCompleted();\n\t\t});\n\t}\n}\n\nexport function refreshDashb() {\n\t_ctrl.timeSrv.refreshDashboard();\n}\n\nChartCtrl.templateUrl = 'partials/module.html';\n"]}
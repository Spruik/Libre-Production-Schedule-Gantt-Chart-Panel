{"version":3,"sources":["../src/chart_ctrl.js"],"names":["refreshDashb","_ctrl","timeSrv","refreshDashboard","angular","moment","_","$","dp","chart","utils","cons","echarts","MetricsPanelCtrl","panelDefaults","targets","pageSize","showHeader","styles","columns","fontSize","ChartCtrl","$scope","$injector","templateSrv","annotationsSrv","$sanitize","variableSrv","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","hasData","datasource","transform","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","dataRaw","render","dataList","console","log","copyObject","length","undefined","from","timeRange","to","filter","rows","type","queryProductionLineDetails","callback","self","restructuredData","lowerCaseRow","row","map","elem","toLowerCase","indexOf","STATE_REPLACED","STATE_DELETED","scheduledStartTimeTimeStamp","scheduledStartTime","changeover","duration","subtract","isSameOrAfter","isSameOrBefore","globe_data","scope","attrs","ctrl","$panelContainer","find","myChart","init","renderPanel","option","getOption","setOption","setTimeout","height","resize","window","onresize","interationSetup","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLO,WAASA,YAAT,GAAuB;AAC5BC,UAAMC,OAAN,CAAcC,gBAAd;AACD;;0BAFeH,Y;;;;AAtLTI,a;;AACAC,Y;;AACAC,O;;AACAC,O;;AACKC,Q;;AACAC,W;;AACAC,W;;AACAC,U;;AACLC,a;;AACCC,sB,kBAAAA,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQJZ,W;AAEEa,mB,GAAgB;AACpBC,iBAAS,CAAC,EAAD,CADW;AAEpBC,kBAAU,IAFU;AAGpBC,oBAAY,IAHQ;AAIpBC,gBAAQ,EAJY;AAKpBC,iBAAS,EALW;AAMpBC,kBAAU;AANU,O;;2BASTC,S;;;AAEX,2BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,cAA5C,EAA4DC,SAA5D,EAAuEC,WAAvE,EAAoF;AAAA;;AAAA,4HAC5EL,MAD4E,EACpEC,SADoE;;AAGlF,gBAAKK,SAAL,GAAiB,CAAjB;;AAEA,cAAI,MAAKC,KAAL,CAAWX,MAAX,KAAsB,KAAK,CAA/B,EAAkC;AAChC,kBAAKW,KAAL,CAAWX,MAAX,GAAoB,MAAKW,KAAL,CAAWV,OAA/B;AACA,kBAAKU,KAAL,CAAWV,OAAX,GAAqB,MAAKU,KAAL,CAAWC,MAAhC;AACA,mBAAO,MAAKD,KAAL,CAAWV,OAAlB;AACA,mBAAO,MAAKU,KAAL,CAAWC,MAAlB;AACD;;AAEDxB,YAAEyB,QAAF,CAAW,MAAKF,KAAhB,EAAuBf,aAAvB;;AAEA,gBAAKkB,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKC,cAAL,CAAoBC,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKG,WAAL,CAAiBD,IAAjB,OAA7B;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKC,cAAL,CAAoBC,IAApB,OAArC;;AAEA,gBAAKE,OAAL,GAAe,KAAf;AAlBkF;AAmBnF;;;;uCAEYC,U,EAAY;AACvB,iBAAKV,SAAL,GAAiB,CAAjB;;AAEA,gBAAI,KAAKC,KAAL,CAAWU,SAAX,KAAyB,aAA7B,EAA4C;AAC1C,mBAAKC,iBAAL;AACA,qBAAO,KAAKf,cAAL,CACJgB,cADI,CACW;AACdC,2BAAW,KAAKA,SADF;AAEdb,uBAAO,KAAKA,KAFE;AAGdc,uBAAO,KAAKA;AAHE,eADX,EAMJC,IANI,CAMC,uBAAe;AACnB,uBAAO,EAAEC,MAAMC,WAAR,EAAP;AACD,eARI,CAAP;AASD;;AAED,sIAA0BR,UAA1B;AACD;;;sCAEWS,G,EAAK;AACf,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,MAAL;AACD;;;yCAEcC,Q,EAAU;AACvBC,oBAAQC,GAAR,CAAY,GAAZ,EAAiB1C,MAAM2C,UAAN,CAAiBH,QAAjB,CAAjB;AACA,gBAAIA,SAASI,MAAT,KAAoB,CAApB,IAAyBJ,aAAa,IAAtC,IAA8CA,aAAaK,SAA/D,EAA0E;AACxE;AACA,mBAAKlB,OAAL,GAAe,KAAf;AACA;AACD;;AAED;AACA,gBAAMmB,OAAO,KAAKhC,WAAL,CAAiBiC,SAAjB,CAA2BD,IAAxC;AACA,gBAAME,KAAK,KAAKlC,WAAL,CAAiBiC,SAAjB,CAA2BC,EAAtC;;AAEAR,uBAAW,KAAKS,MAAL,CAAYT,QAAZ,EAAsBM,IAAtB,EAA4BE,EAA5B,CAAX,CAZuB,CAYoB;AAC3C,gBAAIR,SAAS,CAAT,EAAYU,IAAZ,CAAiBN,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,mBAAKjB,OAAL,GAAe,KAAf;AACA;AACD,aAHD,MAGM;AACJ,mBAAKA,OAAL,GAAe,IAAf;AACD;;AAED,gBAAIa,SAAS,CAAT,EAAYW,IAAZ,KAAqB,OAAzB,EAAkC;AAChCV,sBAAQC,GAAR,CAAY,6EAAZ;AACA;AACD;;AAED;AACA1C,kBAAMoD,0BAAN,CAAiCC,QAAjC;;AAEA,gBAAIC,OAAO,IAAX;AACA,qBAASD,QAAT,GAAmB;AACjB;AACA,kBAAIlB,OAAOrC,GAAGyD,gBAAH,CAAoBf,SAAS,CAAT,EAAY/B,OAAhC,EAAyC+B,SAAS,CAAT,EAAYU,IAArD,CAAX;AACA,kBAAIf,KAAKS,MAAL,KAAgB,CAApB,EAAuB;AAAE;AAAQ;AACjCU,mBAAKf,MAAL,CAAYJ,IAAZ;AACD;AACF;;;iCAIMK,Q,EAAUM,I,EAAME,E,EAAI;AACzB,gBAAIR,SAASI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,qBAAOJ,QAAP;AACD;;AAED,gBAAIU,OAAOV,SAAS,CAAT,EAAYU,IAAvB;AACAA,mBAAOA,KAAKD,MAAL,CAAY,eAAO;AACxB,kBAAMO,eAAeC,IAAIC,GAAJ,CAAQ;AAAA,uBAAS,OAAOC,IAAP,KAAgB,QAAjB,GAA6BA,KAAKC,WAAL,EAA7B,GAAkDD,IAA1D;AAAA,eAAR,CAArB;AACA,kBAAIH,aAAaK,OAAb,CAAqB5D,KAAK6D,cAA1B,MAA8C,CAAC,CAA/C,IAAoDN,aAAaK,OAAb,CAAqB5D,KAAK8D,aAA1B,MAA6C,CAAC,CAAtG,EAAyG;AACvG,oBAAI,CAACN,IAAI,CAAJ,CAAL,EAAa;AAAE,yBAAOA,GAAP;AAAY,iBAD4E,CAC3E;AAC5B,oBAAMO,8BAA8BP,IAAI,CAAJ,CAApC,CAFuG,CAE5D;AAC3C,oBAAMQ,qBAAqBtE,OAAOqE,2BAAP,CAA3B,CAHuG,CAGxC;AAC/D,oBAAME,aAAavE,OAAOwE,QAAP,CAAgBV,IAAI,EAAJ,CAAhB,EAAyB,SAAzB,CAAnB,CAJuG,CAIhD;AACvDQ,mCAAmBG,QAAnB,CAA4BF,UAA5B,EALuG,CAK/D;AACxC,oBAAID,mBAAmBI,aAAnB,CAAiCvB,IAAjC,KAA0CmB,mBAAmBK,cAAnB,CAAkCtB,EAAlC,CAA9C,EAAqF;AACnF;AACA,yBAAOS,GAAP;AACD;AACF;AACF,aAbM,CAAP;AAcAjB,qBAAS,CAAT,EAAYU,IAAZ,GAAmBA,IAAnB;AACA;AACA,mBAAOV,QAAP;AACD;;;sCAEU;AACT,iBAAKD,MAAL,CAAY,KAAKgC,UAAjB;AACD;;;+BAEIC,K,EAAOb,I,EAAMc,K,EAAOC,I,EAAM;AAC7B,gBAAMC,kBAAkBhB,KAAKiB,IAAL,CAAU,kCAAV,EAA8C,CAA9C,CAAxB;AACA,gBAAMC,UAAU3E,QAAQ4E,IAAR,CAAaH,eAAb,CAAhB;AACApF,oBAAQmF,IAAR;;AAEA,qBAASK,WAAT,CAAqB5C,IAArB,EAA2B;AACzB,kBAAI,CAAC0C,OAAD,IAAY,CAAC1C,IAAjB,EAAuB;AAAE;AAAS;AAClC,kBAAM6C,SAASjF,MAAMkF,SAAN,CAAgB9C,IAAhB,CAAf;AACA;AACA0C,sBAAQK,SAAR,CAAkBF,MAAlB;AACAG,yBAAW,YAAM;AACbtF,kBAAE,kCAAF,EAAsCuF,MAAtC,CAA6CV,KAAKU,MAAL,GAAc,EAA3D;AACAP,wBAAQQ,MAAR;AACAC,uBAAOC,QAAP,GAAkB,YAAM;AACpBV,0BAAQQ,MAAR;AACH,iBAFD;AAGH,eAND,EAMG,GANH;;AAQAtF,oBAAMyF,eAAN,CAAsBX,OAAtB,EAA+BH,IAA/B;AACD;;AAEDA,iBAAKpD,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,YAAM;AACzC,kBAAIsD,OAAJ,EAAa;AACT,oBAAMO,SAASV,KAAKU,MAAL,GAAc,EAA7B;AACA,oBAAIA,UAAU,GAAd,EAAmB;AACjBvF,oBAAE,kCAAF,EAAsCuF,MAAtC,CAA6CA,MAA7C;AACD;AACDP,wBAAQQ,MAAR;AACH;AACF,aARD;;AAUAX,iBAAKpD,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,gBAAQ;AAC/BwD,0BAAY5C,IAAZ;AACAuC,mBAAKe,kBAAL;AACD,aAHD;AAID;;;;QAtJ4BtF,gB;;;;AA8J/BQ,gBAAU+E,WAAV,GAAwB,sBAAxB","file":"chart_ctrl.js","sourcesContent":["import angular from 'angular'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport $ from 'jquery'\nimport * as dp from './data_processor'\nimport * as chart from './chart_option'\nimport * as utils from './utils'\nimport * as cons from './constans'\nimport echarts from './libs/echarts.min'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\n\nimport './css/style.css!'\nimport './css/bootstrap-slider.css!'\nimport './css/instant-search.css!'\nimport './css/timepicker.css!'\nimport './css/datepicker.css!'\n\nlet _ctrl\n\nconst panelDefaults = {\n  targets: [{}],\n  pageSize: null,\n  showHeader: true,\n  styles: [],\n  columns: [],\n  fontSize: '100%',\n};\n\nexport class ChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, templateSrv, annotationsSrv, $sanitize, variableSrv) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n    this.hasData = false\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then(annotations => {\n          return { data: annotations };\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {    \n    console.log('o', utils.copyObject(dataList))\n    if (dataList.length === 0 || dataList === null || dataList === undefined) {\n      // console.log('No data reveived')\n      this.hasData = false\n      return\n    }\n\n    // time range\n    const from = this.templateSrv.timeRange.from\n    const to = this.templateSrv.timeRange.to\n\n    dataList = this.filter(dataList, from, to) // filter out those with status of 'replaced' or 'deleted' and those that are not in the time range\n    if (dataList[0].rows.length === 0) {\n      this.hasData = false\n      return\n    }else {\n      this.hasData = true\n    }\n    \n    if (dataList[0].type !== 'table') {\n      console.log('To show the pie chart, please format data as a TABLE in the Metrics Setting')\n      return\n    }\n\n    //if everything is all good, start getting production line details (start time) from postgresdb\n    utils.queryProductionLineDetails(callback)\n\n    let self = this\n    function callback(){      \n      //dataList data is messy and with lots of unwanted data, so we need to filter out data that we want -\n      let data = dp.restructuredData(dataList[0].columns, dataList[0].rows)\n      if (data.length === 0) { return }\n      self.render(data)\n    }\n  }\n\n  // 1. filter out records that are not of status of 'Replaced'\n  // 2. filter out records that are not in the time range\n  filter(dataList, from, to) {\n    if (dataList.length === 0) {\n      return dataList\n    }\n  \n    let rows = dataList[0].rows\n    rows = rows.filter(row => {\n      const lowerCaseRow = row.map(elem => (typeof elem === 'string') ? elem.toLowerCase() : elem)\n      if (lowerCaseRow.indexOf(cons.STATE_REPLACED) === -1 && lowerCaseRow.indexOf(cons.STATE_DELETED) === -1) {\n        if (!row[8]) { return row } // at the first time the start time will be null, let it in for now, and the time will be assigned, which will be examined later\n        const scheduledStartTimeTimeStamp = row[8] // the scheduled start time is the 10th elem\n        const scheduledStartTime = moment(scheduledStartTimeTimeStamp) // moment shcedule start time\n        const changeover = moment.duration(row[10], 'H:mm:ss') // moment changeover\n        scheduledStartTime.subtract(changeover) // start time - changeover to have the initial time\n        if (scheduledStartTime.isSameOrAfter(from) && scheduledStartTime.isSameOrBefore(to)) {\n          // if scheduled start time >= $from && <= $to\n          return row\n        }\n      }\n    })\n    dataList[0].rows = rows\n    //console.log('d', dataList)\n    return dataList\n  }\n\n  rendering(){\n    this.render(this.globe_data)\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    const $panelContainer = elem.find('#production-schedule-gantt-chart')[0];\n    const myChart = echarts.init($panelContainer)\n    _ctrl = ctrl\n    \n    function renderPanel(data) { \n      if (!myChart || !data) { return; }\n      const option = chart.getOption(data)\n      // myChart.clear();\n      myChart.setOption(option);\n      setTimeout(() => {\n          $('#production-schedule-gantt-chart').height(ctrl.height - 51)\n          myChart.resize();\n          window.onresize = () => {\n              myChart.resize();\n          }\n      }, 500);\n\n      chart.interationSetup(myChart, ctrl)\n    }\n\n    ctrl.events.on('panel-size-changed', () => {\n      if (myChart) { \n          const height = ctrl.height - 51\n          if (height >= 280) {\n            $('#production-schedule-gantt-chart').height(height);\n          }\n          myChart.resize(); \n      }\n    })\n\n    ctrl.events.on('render', data => {\n      renderPanel(data);\n      ctrl.renderingCompleted();\n    });\n  }\n\n}\n\nexport function refreshDashb(){\n  _ctrl.timeSrv.refreshDashboard()\n}\n\nChartCtrl.templateUrl = 'partials/module.html';\n"]}